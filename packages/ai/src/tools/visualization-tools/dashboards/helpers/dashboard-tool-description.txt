Creates dashboard configuration files with YAML content following the dashboard schema specification. Before using this tool, carefully consider the dashboard layout, metric references, and row organization. Each dashboard references existing metrics by their UUIDs and organizes them into rows with specific column layouts. **This tool supports creating multiple dashboards in a single call; prefer using bulk creation over creating dashboards one by one.**

## COMPLETE DASHBOARD YAML SCHEMA

`# DASHBOARD CONFIGURATION - YML STRUCTURE
# ----------------------------------------
# Required fields:
#
# name: Your Dashboard Title  # Do NOT use quotes for string values
# description: A description of the dashboard, its metrics, and its purpose.  # NO quotes
# rows: 
#   - id: 1               # Required row ID (integer)
#     items:
#       - id: metric-uuid-1  # UUIDv4 of an existing metric, NO quotes
#     columnSizes: [12]   # Required - must sum to exactly 12
#   - id: 2 # REQUIRED
#     items:
#       - id: metric-uuid-2
#       - id: metric-uuid-3
#     columnSizes: 
#       - 6
#       - 6
#
# Rules:
# 1. Each row can have up to 4 items, but you should only ever put 3 cards on a single row (adding 4 assets to a single row feels too cramped/squashed)
# 2. Each row must have a unique ID
# 3. columnSizes is required and must specify the width for each item
# 4. Sum of columnSizes in a row must be exactly 12
# 5. Each column size must be at least 3
# 6. All arrays should follow the YML array syntax using `-` and should NOT USE `[]` formatting.
# 7. Don't use comments. The ones in the example are just for explanation
# 8. String values generally should NOT use quotes unless they contain special characters (like :, {, }, [, ], ,, &, *, #, ?, |, -, <, >, =, !, %, @, `) or start/end with whitespace.
# 9. If a string contains special characters or needs to preserve leading/trailing whitespace, enclose it in double quotes (`"`). Example: `name: "Sales & Marketing Dashboard"`
# 10. Avoid special characters in names and descriptions where possible, but if needed, use quotes as described in rule 9. UUIDs should NEVER be quoted.
# ----------------------------------------

type: object
name: Dashboard Configuration Schema
description: Specifies the structure and constraints of a dashboard config file.
properties:
  name:
    type: string
    description: The title of the dashboard (e.g. Sales & Marketing Dashboard) - do NOT use quotes
  description:
    type: string
    description: A description of the dashboard, its metrics, and its purpose
  rows:
    type: array
    description: Array of row objects, each containing metric items
    items:
      type: object
      properties:
        id:
          type: integer
          description: This is just an integer representing the row number 1 -> n
        items:
          type: array
          description: Array of metrics to display in this row (max 4 items)
          maxItems: 4
          items:
            type: object
            properties:
              id:
                type: string
                description: UUIDv4 identifier of an existing metric
            required:
              - id
        columnSizes:
          type: array
          description: Required array of column sizes (must sum to exactly 12)
          items:
            type: integer
            minimum: 3
            maximum: 12
      required:
        - id
        - items
        - columnSizes
required:
  - name
  - description
  - rows`

**Key Requirements:**
- `name`: Dashboard title (no underscores, descriptive name)
- `description`: Natural language explanation of the dashboard's purpose and contents
- `rows`: Array of row objects, each with unique ID, items (metric UUIDs), and columnSizes
- Each row must have 1-4 items maximum
- `columnSizes` must sum to exactly 12 and each size must be >= 3
- All metric IDs must be valid UUIDs of existing metrics
- Row IDs must be unique integers (typically 1, 2, 3, etc.)

**Dashboard Layout Rules:**
- Grid system: Each row spans 12 columns total
- Column sizes: [12] = full width, [6,6] = two halves, [4,4,4] = three thirds, [3,3,3,3] = four quarters
- Common layouts: [12], [6,6], [4,8], [3,9], [4,4,4], [3,3,6], [3,3,3,3]
- Each metric item gets the corresponding column size in the same position

**Example Structure:**
```yaml
name: Sales Performance Dashboard
description: Comprehensive overview of sales metrics including revenue, conversions, and geographic performance
rows:
  - id: 1
    items:
      - id: 550e8400-e29b-41d4-a716-446655440001
    columnSizes:
      - 12
  - id: 2
    items:
      - id: 550e8400-e29b-41d4-a716-446655440002
      - id: 550e8400-e29b-41d4-a716-446655440003
    columnSizes:
      - 6
      - 6
  - id: 3
    items:
      - id: 550e8400-e29b-41d4-a716-446655440004
      - id: 550e8400-e29b-41d4-a716-446655440005
      - id: 550e8400-e29b-41d4-a716-446655440006
    columnSizes:
      - 4
      - 4
      - 4
```

**CRITICAL:** Follow the schema exactly - all metric IDs must reference existing metrics, column sizes must sum to 12, and row IDs must be unique. The tool will validate all metric references against the database.