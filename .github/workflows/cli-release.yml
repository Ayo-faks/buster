name: CLI Release

on:
  push:
    branches:
      - main
    paths:
      - 'apps/cli/**'
      - 'packages/**'
      - '.github/workflows/cli-release.yml'
  workflow_dispatch:

# Add permissions for creating releases
permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build-deps:
    runs-on: blacksmith-4vcpu-ubuntu-2404
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node Environment
        uses: ./.github/actions/setup-node-env
        with:
          install-filter: "@buster-app/cli..."

      - name: Mount Turbo cache sticky disk
        uses: useblacksmith/stickydisk@v1
        with:
          key: ${{ github.repository }}-turbo-cache-cli
          path: ./.turbo

      - name: Build dependencies with Turbo
        run: |
          echo "🔨 Building CLI dependencies with Turbo..."
          pnpm turbo run build --filter=@buster-app/cli^...
        env:
          NODE_ENV: production
          SKIP_ENV_CHECK: true
          TURBO_CACHE_DIR: .turbo
          TURBO_TELEMETRY_DISABLED: 1

      - name: Cache built dependencies
        uses: actions/cache/save@v4
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            apps/*/dist
            packages/*/dist
            .turbo
          key: cli-deps-${{ github.sha }}

  build-linux:
    needs: build-deps
    runs-on: blacksmith-2vcpu-ubuntu-2404
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: ./.github/actions/setup-node-env
        with:
          install-filter: "@buster-app/cli..."

      - name: Restore built dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            apps/*/dist
            packages/*/dist
            .turbo
          key: cli-deps-${{ github.sha }}

      - name: Build Linux binary
        working-directory: ./apps/cli
        run: |
          echo "📦 Building Linux x64 binary..."
          mkdir -p dist
          bun build src/index.tsx --compile --target=bun-linux-x64 --minify --outfile dist/buster-linux-x64
          chmod +x dist/buster-linux-x64
          
          echo "🧪 Testing Linux binary..."
          ./dist/buster-linux-x64 --version || echo "Version command not implemented yet"
          ./dist/buster-linux-x64 --help || echo "Help command output"

      - name: Package Linux binary
        working-directory: ./apps/cli/dist
        run: |
          cp buster-linux-x64 buster
          tar czf buster-cli-linux-x86_64.tar.gz buster
          sha256sum buster-cli-linux-x86_64.tar.gz > buster-cli-linux-x86_64.tar.gz.sha256
          ls -lah *.tar.gz *.sha256

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: buster-cli-linux-x64
          path: |
            apps/cli/dist/buster-cli-linux-x86_64.tar.gz
            apps/cli/dist/buster-cli-linux-x86_64.tar.gz.sha256
          retention-days: 1

  build-macos-x64:
    needs: build-deps
    runs-on: blacksmith-2vcpu-ubuntu-2404
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: ./.github/actions/setup-node-env
        with:
          install-filter: "@buster-app/cli..."

      - name: Restore built dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            apps/*/dist
            packages/*/dist
            .turbo
          key: cli-deps-${{ github.sha }}

      - name: Build macOS x64 binary
        working-directory: ./apps/cli
        run: |
          echo "📦 Building macOS x64 (Intel) binary..."
          mkdir -p dist
          bun build src/index.tsx --compile --target=bun-darwin-x64 --minify --outfile dist/buster-darwin-x64
          chmod +x dist/buster-darwin-x64

      - name: Package macOS x64 binary
        working-directory: ./apps/cli/dist
        run: |
          cp buster-darwin-x64 buster
          tar czf buster-cli-darwin-x86_64.tar.gz buster
          sha256sum buster-cli-darwin-x86_64.tar.gz > buster-cli-darwin-x86_64.tar.gz.sha256
          ls -lah *.tar.gz *.sha256

      - name: Upload macOS x64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: buster-cli-darwin-x64
          path: |
            apps/cli/dist/buster-cli-darwin-x86_64.tar.gz
            apps/cli/dist/buster-cli-darwin-x86_64.tar.gz.sha256
          retention-days: 1

  build-macos-arm64:
    needs: build-deps
    runs-on: blacksmith-2vcpu-ubuntu-2404
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: ./.github/actions/setup-node-env
        with:
          install-filter: "@buster-app/cli..."

      - name: Restore built dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            apps/*/dist
            packages/*/dist
            .turbo
          key: cli-deps-${{ github.sha }}

      - name: Build macOS ARM64 binary
        working-directory: ./apps/cli
        run: |
          echo "📦 Building macOS ARM64 (Apple Silicon) binary..."
          mkdir -p dist
          bun build src/index.tsx --compile --target=bun-darwin-arm64 --minify --outfile dist/buster-darwin-arm64
          chmod +x dist/buster-darwin-arm64

      - name: Package macOS ARM64 binary
        working-directory: ./apps/cli/dist
        run: |
          cp buster-darwin-arm64 buster
          tar czf buster-cli-darwin-arm64.tar.gz buster
          sha256sum buster-cli-darwin-arm64.tar.gz > buster-cli-darwin-arm64.tar.gz.sha256
          ls -lah *.tar.gz *.sha256

      - name: Upload macOS ARM64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: buster-cli-darwin-arm64
          path: |
            apps/cli/dist/buster-cli-darwin-arm64.tar.gz
            apps/cli/dist/buster-cli-darwin-arm64.tar.gz.sha256
          retention-days: 1

  build-windows:
    needs: build-deps
    runs-on: blacksmith-2vcpu-ubuntu-2404
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node Environment
        uses: ./.github/actions/setup-node-env
        with:
          install-filter: "@buster-app/cli..."

      - name: Restore built dependencies
        uses: actions/cache/restore@v4
        with:
          path: |
            node_modules
            apps/*/node_modules
            packages/*/node_modules
            apps/*/dist
            packages/*/dist
            .turbo
          key: cli-deps-${{ github.sha }}

      - name: Build Windows binary
        working-directory: ./apps/cli
        run: |
          echo "📦 Building Windows x64 binary..."
          mkdir -p dist
          bun build src/index.tsx --compile --target=bun-windows-x64 --minify --outfile dist/buster-windows-x64.exe

      - name: Package Windows binary
        working-directory: ./apps/cli/dist
        run: |
          cp buster-windows-x64.exe buster.exe
          zip buster-cli-windows-x86_64.zip buster.exe
          sha256sum buster-cli-windows-x86_64.zip > buster-cli-windows-x86_64.zip.sha256
          ls -lah *.zip *.sha256

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: buster-cli-windows-x64
          path: |
            apps/cli/dist/buster-cli-windows-x86_64.zip
            apps/cli/dist/buster-cli-windows-x86_64.zip.sha256
          retention-days: 1

  release:
    needs: [build-linux, build-macos-x64, build-macos-arm64, build-windows]
    runs-on: blacksmith-2vcpu-ubuntu-2404
    outputs:
      cli_version: ${{ steps.get_version.outputs.version }}
      cli_tag_name: ${{ steps.create_the_release.outputs.tag_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Extract version from package.json
        id: get_version
        run: |
          # Update this to 0.3.0 as requested
          VERSION="0.3.0"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"
          
          # Also update the package.json to match
          cd apps/cli
          npm version $VERSION --no-git-tag-version || true
          cd ../..

      - name: Check if release exists
        id: check_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh release view "v${{ steps.get_version.outputs.version }}" &>/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.get_version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.get_version.outputs.version }} does not exist"
          fi

      - name: Create Release
        id: create_the_release
        if: steps.check_release.outputs.exists != 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## Buster CLI v${{ steps.get_version.outputs.version }}
            
            ### What's New
            - TypeScript-based CLI built with Bun
            - Fast native binary compilation
            - Cross-platform support (macOS, Linux, Windows)
            
            ### Installation
            
            #### Homebrew (macOS/Linux)
            ```bash
            brew tap buster-so/buster-homebrew
            brew install buster
            ```
            
            #### Direct Download
            Download the appropriate binary for your platform from the assets below.
            
            ### Checksums
            Verify your download with the SHA256 checksums provided.
          files: |
            **/buster-cli-linux-x86_64.tar.gz
            **/buster-cli-linux-x86_64.tar.gz.sha256
            **/buster-cli-darwin-x86_64.tar.gz
            **/buster-cli-darwin-x86_64.tar.gz.sha256
            **/buster-cli-darwin-arm64.tar.gz
            **/buster-cli-darwin-arm64.tar.gz.sha256
            **/buster-cli-windows-x86_64.zip
            **/buster-cli-windows-x86_64.zip.sha256
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Output release info
        if: steps.check_release.outputs.exists != 'true'
        run: |
          echo "tag_name=v${{ steps.get_version.outputs.version }}" >> $GITHUB_OUTPUT
          echo "✅ Release created: v${{ steps.get_version.outputs.version }}"

  update_homebrew_tap:
    name: Update Homebrew Tap
    needs: release
    if: needs.release.outputs.cli_version != '' && needs.release.outputs.cli_tag_name != ''
    uses: ./.github/workflows/update-brew-tap.yml
    with:
      tag: ${{ needs.release.outputs.cli_tag_name }}
      version: ${{ needs.release.outputs.cli_version }}
    secrets:
      HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}

  notify:
    name: Notify Release Completion
    needs: [release, update_homebrew_tap]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Release Summary
        run: |
          echo "## 🚀 CLI Release Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.release.result }}" == "success" ]]; then
            echo "✅ **Release Status:** Success" >> $GITHUB_STEP_SUMMARY
            echo "📦 **Version:** v${{ needs.release.outputs.cli_version }}" >> $GITHUB_STEP_SUMMARY
            echo "🏷️ **Tag:** ${{ needs.release.outputs.cli_tag_name }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Release Status:** Failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [[ "${{ needs.update_homebrew_tap.result }}" == "success" ]]; then
            echo "🍺 **Homebrew:** Updated successfully" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.update_homebrew_tap.result }}" == "skipped" ]]; then
            echo "⏭️ **Homebrew:** Skipped (no new release)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Homebrew:** Update failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "- Test installation: \`brew upgrade buster\`" >> $GITHUB_STEP_SUMMARY
          echo "- Verify functionality: \`buster --version\`" >> $GITHUB_STEP_SUMMARY