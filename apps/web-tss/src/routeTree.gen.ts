/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/auth'
import { Route as AppRouteImport } from './routes/app'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthResetPasswordRouteImport } from './routes/auth.reset-password'
import { Route as AuthLogoutRouteImport } from './routes/auth.logout'
import { Route as AuthLoginRouteImport } from './routes/auth.login'
import { Route as AppHomeRouteImport } from './routes/app.home'
import { Route as AppReportsIndexRouteImport } from './routes/app.reports.index'
import { Route as AppMetricsIndexRouteImport } from './routes/app.metrics.index'
import { Route as AppDashboardsIndexRouteImport } from './routes/app.dashboards.index'
import { Route as AppChatsIndexRouteImport } from './routes/app.chats.index'
import { Route as AppReportsReportIdRouteImport } from './routes/app.reports.$reportId'
import { Route as AppMetricsMetricIdRouteImport } from './routes/app.metrics.$metricId'
import { Route as AppDashboardsDashboardIdRouteImport } from './routes/app.dashboards.$dashboardId'
import { Route as AppChatsChatIdRouteImport } from './routes/app.chats.$chatId'
import { ServerRoute as AuthCallbackServerRouteImport } from './routes/auth.callback'

const rootServerRouteImport = createServerRootRoute()

const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLogoutRoute = AuthLogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const AppHomeRoute = AppHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AppRoute,
} as any)
const AppReportsIndexRoute = AppReportsIndexRouteImport.update({
  id: '/reports/',
  path: '/reports/',
  getParentRoute: () => AppRoute,
} as any)
const AppMetricsIndexRoute = AppMetricsIndexRouteImport.update({
  id: '/metrics/',
  path: '/metrics/',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardsIndexRoute = AppDashboardsIndexRouteImport.update({
  id: '/dashboards/',
  path: '/dashboards/',
  getParentRoute: () => AppRoute,
} as any)
const AppChatsIndexRoute = AppChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => AppRoute,
} as any)
const AppReportsReportIdRoute = AppReportsReportIdRouteImport.update({
  id: '/reports/$reportId',
  path: '/reports/$reportId',
  getParentRoute: () => AppRoute,
} as any)
const AppMetricsMetricIdRoute = AppMetricsMetricIdRouteImport.update({
  id: '/metrics/$metricId',
  path: '/metrics/$metricId',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardsDashboardIdRoute =
  AppDashboardsDashboardIdRouteImport.update({
    id: '/dashboards/$dashboardId',
    path: '/dashboards/$dashboardId',
    getParentRoute: () => AppRoute,
  } as any)
const AppChatsChatIdRoute = AppChatsChatIdRouteImport.update({
  id: '/chats/$chatId',
  path: '/chats/$chatId',
  getParentRoute: () => AppRoute,
} as any)
const AuthCallbackServerRoute = AuthCallbackServerRouteImport.update({
  id: '/auth/callback',
  path: '/auth/callback',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/app/home': typeof AppHomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/app/chats/$chatId': typeof AppChatsChatIdRoute
  '/app/dashboards/$dashboardId': typeof AppDashboardsDashboardIdRoute
  '/app/metrics/$metricId': typeof AppMetricsMetricIdRoute
  '/app/reports/$reportId': typeof AppReportsReportIdRoute
  '/app/chats': typeof AppChatsIndexRoute
  '/app/dashboards': typeof AppDashboardsIndexRoute
  '/app/metrics': typeof AppMetricsIndexRoute
  '/app/reports': typeof AppReportsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/app/home': typeof AppHomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/app/chats/$chatId': typeof AppChatsChatIdRoute
  '/app/dashboards/$dashboardId': typeof AppDashboardsDashboardIdRoute
  '/app/metrics/$metricId': typeof AppMetricsMetricIdRoute
  '/app/reports/$reportId': typeof AppReportsReportIdRoute
  '/app/chats': typeof AppChatsIndexRoute
  '/app/dashboards': typeof AppDashboardsIndexRoute
  '/app/metrics': typeof AppMetricsIndexRoute
  '/app/reports': typeof AppReportsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/app/home': typeof AppHomeRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/app/chats/$chatId': typeof AppChatsChatIdRoute
  '/app/dashboards/$dashboardId': typeof AppDashboardsDashboardIdRoute
  '/app/metrics/$metricId': typeof AppMetricsMetricIdRoute
  '/app/reports/$reportId': typeof AppReportsReportIdRoute
  '/app/chats/': typeof AppChatsIndexRoute
  '/app/dashboards/': typeof AppDashboardsIndexRoute
  '/app/metrics/': typeof AppMetricsIndexRoute
  '/app/reports/': typeof AppReportsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth'
    | '/app/home'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/reset-password'
    | '/app/chats/$chatId'
    | '/app/dashboards/$dashboardId'
    | '/app/metrics/$metricId'
    | '/app/reports/$reportId'
    | '/app/chats'
    | '/app/dashboards'
    | '/app/metrics'
    | '/app/reports'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/auth'
    | '/app/home'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/reset-password'
    | '/app/chats/$chatId'
    | '/app/dashboards/$dashboardId'
    | '/app/metrics/$metricId'
    | '/app/reports/$reportId'
    | '/app/chats'
    | '/app/dashboards'
    | '/app/metrics'
    | '/app/reports'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/auth'
    | '/app/home'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/reset-password'
    | '/app/chats/$chatId'
    | '/app/dashboards/$dashboardId'
    | '/app/metrics/$metricId'
    | '/app/reports/$reportId'
    | '/app/chats/'
    | '/app/dashboards/'
    | '/app/metrics/'
    | '/app/reports/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/auth/callback': typeof AuthCallbackServerRoute
}
export interface FileServerRoutesByTo {
  '/auth/callback': typeof AuthCallbackServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/auth/callback': typeof AuthCallbackServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/auth/callback'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/auth/callback'
  id: '__root__' | '/auth/callback'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  AuthCallbackServerRoute: typeof AuthCallbackServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/app/home': {
      id: '/app/home'
      path: '/home'
      fullPath: '/app/home'
      preLoaderRoute: typeof AppHomeRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/reports/': {
      id: '/app/reports/'
      path: '/reports'
      fullPath: '/app/reports'
      preLoaderRoute: typeof AppReportsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/metrics/': {
      id: '/app/metrics/'
      path: '/metrics'
      fullPath: '/app/metrics'
      preLoaderRoute: typeof AppMetricsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/dashboards/': {
      id: '/app/dashboards/'
      path: '/dashboards'
      fullPath: '/app/dashboards'
      preLoaderRoute: typeof AppDashboardsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/chats/': {
      id: '/app/chats/'
      path: '/chats'
      fullPath: '/app/chats'
      preLoaderRoute: typeof AppChatsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/reports/$reportId': {
      id: '/app/reports/$reportId'
      path: '/reports/$reportId'
      fullPath: '/app/reports/$reportId'
      preLoaderRoute: typeof AppReportsReportIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/metrics/$metricId': {
      id: '/app/metrics/$metricId'
      path: '/metrics/$metricId'
      fullPath: '/app/metrics/$metricId'
      preLoaderRoute: typeof AppMetricsMetricIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/dashboards/$dashboardId': {
      id: '/app/dashboards/$dashboardId'
      path: '/dashboards/$dashboardId'
      fullPath: '/app/dashboards/$dashboardId'
      preLoaderRoute: typeof AppDashboardsDashboardIdRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/chats/$chatId': {
      id: '/app/chats/$chatId'
      path: '/chats/$chatId'
      fullPath: '/app/chats/$chatId'
      preLoaderRoute: typeof AppChatsChatIdRouteImport
      parentRoute: typeof AppRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/auth/callback': {
      id: '/auth/callback'
      path: '/auth/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface AppRouteChildren {
  AppHomeRoute: typeof AppHomeRoute
  AppChatsChatIdRoute: typeof AppChatsChatIdRoute
  AppDashboardsDashboardIdRoute: typeof AppDashboardsDashboardIdRoute
  AppMetricsMetricIdRoute: typeof AppMetricsMetricIdRoute
  AppReportsReportIdRoute: typeof AppReportsReportIdRoute
  AppChatsIndexRoute: typeof AppChatsIndexRoute
  AppDashboardsIndexRoute: typeof AppDashboardsIndexRoute
  AppMetricsIndexRoute: typeof AppMetricsIndexRoute
  AppReportsIndexRoute: typeof AppReportsIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppHomeRoute: AppHomeRoute,
  AppChatsChatIdRoute: AppChatsChatIdRoute,
  AppDashboardsDashboardIdRoute: AppDashboardsDashboardIdRoute,
  AppMetricsMetricIdRoute: AppMetricsMetricIdRoute,
  AppReportsReportIdRoute: AppReportsReportIdRoute,
  AppChatsIndexRoute: AppChatsIndexRoute,
  AppDashboardsIndexRoute: AppDashboardsIndexRoute,
  AppMetricsIndexRoute: AppMetricsIndexRoute,
  AppReportsIndexRoute: AppReportsIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  AuthCallbackServerRoute: AuthCallbackServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
